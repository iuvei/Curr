{"version":3,"sources":["../../../../client/src/utils/request.js"],"names":["request","parseJSON","response","json","checkStatus","status","error","Error","statusText","url","options","headers","credentials","then","data","code","success","result","message","catch","err"],"mappings":";;;;;kBAuBwBA,O;;AAvBxB;;;;;;AAEA,SAASC,SAAT,CAAmBC,QAAnB,EAA6B;AAC3B,SAAOA,SAASC,IAAT,EAAP;AACD;;AAED,SAASC,WAAT,CAAqBF,QAArB,EAA+B;AAC7B,MAAIA,SAASG,MAAT,IAAmB,GAAnB,IAA0BH,SAASG,MAAT,GAAkB,GAAhD,EAAqD;AACnD,WAAOH,QAAP;AACD;;AAED,MAAMI,QAAQ,IAAIC,KAAJ,CAAUL,SAASM,UAAnB,CAAd;AACAF,QAAMJ,QAAN,GAAiBA,QAAjB;AACA,QAAMI,KAAN;AACD;;AAED;;;;;;;AAOe,SAASN,OAAT,CAAiBS,GAAjB,EAAsBC,OAAtB,EAA+B;AAC5CA,UAAQC,OAAR,GAAkB,EAAE,UAAU,kBAAZ,EAAgC,gBAAgB,kBAAhD,EAAlB;AACAD,UAAQE,WAAR,GAAoB,SAApB;AACA,SAAO,qBAAMH,GAAN,EAAWC,OAAX;AACL;AADK,GAEJG,IAFI,CAECZ,SAFD,EAGJY,IAHI,CAGC,UAACC,IAAD,EAAU;AACd,QAAIA,KAAKC,IAAL,IAAa,GAAb,IAAoBD,KAAKC,IAAL,GAAY,GAApC,EAAyC;AACvC,aAAO,EAAEC,SAAS,IAAX,EAAiBC,QAAQH,IAAzB,EAAP;AACD;AACD,WAAO,EAAEE,SAAS,KAAX,EAAkBV,OAAOQ,KAAKR,KAA9B,EAAqCY,SAASJ,KAAKI,OAAnD,EAAP;AAED,GATI,EAUJC,KAVI,CAUE;AAAA,WAAQ,EAAEC,QAAF,EAAR;AAAA,GAVF,CAAP;AAWD","file":"request.js","sourcesContent":["import fetch from 'dva/fetch';\n\nfunction parseJSON(response) {\n  return response.json();\n}\n\nfunction checkStatus(response) {\n  if (response.status >= 200 && response.status < 300) {\n    return response;\n  }\n\n  const error = new Error(response.statusText);\n  error.response = response;\n  throw error;\n}\n\n/**\n * Requests a URL, returning a promise.\n *\n * @param  {string} url       The URL we want to request\n * @param  {object} [options] The options we want to pass to \"fetch\"\n * @return {object}           An object containing either \"data\" or \"err\"\n */\nexport default function request(url, options) {\n  options.headers = { 'Accept': 'application/json', 'Content-Type': 'application/json' }\n  options.credentials='include';\n  return fetch(url, options)\n    //.then(checkStatus)\n    .then(parseJSON)\n    .then((data) => {\n      if (data.code >= 200 && data.code < 300) {\n        return { success: true, result: data };\n      }\n      return { success: false, error: data.error, message: data.message };\n\n    })\n    .catch(err => ({ err }));\n}\n"]}